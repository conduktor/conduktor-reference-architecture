# Install components need by Conduktor Console and or Gateway
# Require infra and infra CRDs to be installed first
# Install a Postgres database, a Minio S3 storage, Prometheus and Vault
---
######
##  Kafka default with 3 brokers with schema registry
#####
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: kafka
  namespace: default
spec:
  repo: https://charts.bitnami.com/bitnami
  chart: kafka
  version: 32.1.2
  targetNamespace: cdk-deps
  set:
    global.security.allowInsecureImages: "true"
    clusterId: "cdk"
    image.repository: "bitnamilegacy/kafka"
    image.debug: "false"
    defaultInitContainers.volumePermissions.image.repository: "bitnamilegacy/os-shell"
    defaultInitContainers.autoDiscovery.image.repository: "bitnamilegacy/os-shell"
    metrics.jmx.image.repository: "bitnamilegacy/jmx-exporter"
    listeners.client.port: "9092"
    listeners.client.protocol: "SASL_SSL"
    listeners.external.protocol: "SASL_SSL"
    sasl.client.users[0]: "kafka-admin"
    sasl.client.passwords[0]: "kafka-admin-password"
    # Use cert-manager to generate the certificates
    tls.autoGenerated.enabled: "true"
    tls.autoGenerated.engine: "cert-manager"
    # Create a kafka-tls secret with the keystore and truststore
    tls.autoGenerated.certManager.existingIssuer: "local-ca-issuer"
    tls.autoGenerated.certManager.existingIssuerKind: "ClusterIssuer"
    tls.autoGenerated.certManager.keyAlgorithm: "RSA"
    tls.autoGenerated.certManager.keySize: "2048"
    tls.pemChainIncluded: "true"
    controller.persistence.size: 1Gi
